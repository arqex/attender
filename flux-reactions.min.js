/* flux-reactions v0.0.1 (24-2-2015)
 * https://github.com/arqex/flux-reactions.git
 * By arqex
 * License: GNU-v2
 */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.Reactions=e()}(this,function(){"use strict";var t=window.document,e=function(t,e,n){t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent?t.attachEvent("on"+e,n):t["on"+e]=n},n=function(t,e,n){t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent?t.detachEvent("on"+e,n):delete t["on"+e]},i={on:function(n,i){return e(t,n,i),this},once:function(i,o){var r=function c(){o.apply(null,arguments),n(t,i,c)};return e(t,i,r),this},off:function(e,i){return n(t,e,i),this},mixin:{trigger:function(t,e){var n,i=this.getDOMNode();if(document.createEvent?(n=document.createEvent("HTMLEvents"),n.initEvent(t,!0,!0)):document.createEventObject&&(n=document.createEventObject(),n.eventType=t),n.detail=e,i.dispatchEvent){i.dispatchEvent(n)}else i.fireEvent&&htmlEvents["on"+t]?i.fireEvent("on"+t,n):i[t]?i[t]():i["on"+t]&&i["on"+t]();return n},thenTrigger:function(t,e){return this.trigger.bind(this,t,e)},listenTo:function(t,n){e(this.getDOMNode(),t,n)},componentDidMount:function(){if(this.onEvents){{var t,e;this.getDOMNode()}for(t in this.onEvents)e=this.onEvents[t],"function"!=typeof e&&(e=this[e]),this.listenTo(t,e)}}}};return i});